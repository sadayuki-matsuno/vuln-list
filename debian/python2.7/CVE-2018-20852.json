{
  "description": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
  "releases": {
    "bullseye": {
      "fixed_version": "2.7.16-3",
      "repositories": {
        "bullseye": "2.7.16-3"
      },
      "status": "resolved",
      "urgency": "medium**"
    },
    "buster": {
      "repositories": {
        "buster": "2.7.16-2"
      },
      "status": "open",
      "urgency": "medium**"
    },
    "jessie": {
      "fixed_version": "2.7.9-2+deb8u4",
      "repositories": {
        "jessie": "2.7.9-2+deb8u1",
        "jessie-security": "2.7.9-2+deb8u4"
      },
      "status": "resolved",
      "urgency": "medium**"
    },
    "sid": {
      "fixed_version": "2.7.16-3",
      "repositories": {
        "sid": "2.7.16-3"
      },
      "status": "resolved",
      "urgency": "medium**"
    },
    "stretch": {
      "repositories": {
        "stretch": "2.7.13-2+deb9u3",
        "stretch-security": "2.7.13-2+deb9u3"
      },
      "status": "open",
      "urgency": "medium**"
    }
  },
  "scope": "remote"
}