{
  "debianbug": 906565,
  "description": "In WordPress 4.9.7, plugins uploaded via the admin area are not verified as being ZIP files. This allows for PHP files to be uploaded. Once a PHP file is uploaded, the plugin extraction fails, but the PHP file remains in a predictable wp-content/uploads location, allowing for an attacker to then execute the file. This represents a security risk in limited scenarios where an attacker (who does have the required capabilities for plugin uploads) cannot simply place arbitrary PHP code into a valid plugin ZIP file and upload that plugin, because a machine's wp-content/plugins directory permissions were set up to block all new plugins.",
  "releases": {
    "bullseye": {
      "fixed_version": "4.9.8+dfsg1-1",
      "repositories": {
        "bullseye": "5.0.4+dfsg1-1"
      },
      "status": "resolved",
      "urgency": "medium**"
    },
    "buster": {
      "fixed_version": "4.9.8+dfsg1-1",
      "repositories": {
        "buster": "5.0.4+dfsg1-1"
      },
      "status": "resolved",
      "urgency": "medium**"
    },
    "jessie": {
      "nodsa": "can be fixed with a later update",
      "nodsa_reason": "postponed",
      "repositories": {
        "jessie": "4.1+dfsg-1+deb8u17",
        "jessie-security": "4.1.26+dfsg-1+deb8u1"
      },
      "status": "open",
      "urgency": "medium**"
    },
    "sid": {
      "fixed_version": "4.9.8+dfsg1-1",
      "repositories": {
        "sid": "5.2.2+dfsg1-1"
      },
      "status": "resolved",
      "urgency": "medium**"
    },
    "stretch": {
      "nodsa": "Minor issue",
      "nodsa_reason": "",
      "repositories": {
        "stretch": "4.7.5+dfsg-2+deb9u5",
        "stretch-security": "4.7.5+dfsg-2+deb9u5"
      },
      "status": "open",
      "urgency": "medium**"
    }
  },
  "scope": "remote"
}