{
  "description": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
  "releases": {
    "stretch": {
      "fixed_version": "1.0.2r-1~deb9u1",
      "repositories": {
        "stretch": "1.0.2r-1~deb9u1",
        "stretch-security": "1.0.2s-1~deb9u1"
      },
      "status": "resolved",
      "urgency": "medium**"
    }
  },
  "scope": "remote"
}